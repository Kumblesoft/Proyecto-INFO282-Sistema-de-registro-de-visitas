{ 
    "dbInit": `
    PRAGMA journal_mode = WAL;
    PRAGMA foreign_keys = ON;

    CREATE TABLE IF NOT EXISTS forms (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    last_modification TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS fields (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fk_id_form INTEGER REFERENCES forms(id) NOT NULL,
    fk_field_table_name INTEGER REFERENCES field_table_name(id) NOT NULL,
    name TEXT NOT NULL,
    ordering INTEGER NOT NULL,
    obligatory INTEGER NOT NULL,
    output TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS field_table_name (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    field TEXT NOT NULL UNIQUE
    );
    CREATE UNIQUE INDEX field_name ON field_table_name(field);

    CREATE TABLE IF NOT EXISTS texto (
    fk_field INTEGER REFERENCES fields(id) NOT NULL,
    name TEXT NOT NULL,
    qr_refillable INTEGER NOT NULL
    );

    CREATE TABLE IF NOT EXISTS selector (
    fk_field INTEGER REFERENCES fields(id) NOT NULL,
    dafault_option TEXT,
    dafault_text TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS fecha (
    fk_field INTEGER REFERENCES fields(id) NOT NULL,
    dafault_text TEXT NOT NULL,
    dafault_date TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS hora (
    fk_field INTEGER REFERENCES fields(id) NOT NULL,
    dafault_time TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS camara (
    fk_field INTEGER REFERENCES fields(id) NOT NULL,
    aspect_relation TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS limitations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    regex TEXT,
    value_enum_matrix INTEGER NOT NULL
    );
    CREATE INDEX name_limitation ON limitations(name);

    CREATE TABLE IF NOT EXISTS limitations_intermediary (
    fk_forms INTEGER REFERENCES forms(id) NOT NULL,
    fk_field INTEGER REFERENCES fields(id) NOT NULL, 
    fk_limitations INTEGER REFERENCES limitations(id) NOT NULL
    );
    CREATE INDEX fk_forms_int_lim ON limitations_intermediary(fk_forms);
    CREATE INDEX fk_field_int_lim ON limitations_intermediary(fk_field);
    CREATE INDEX fk_limitations_int_lim ON limitations_intermediary(fk_limitations);

    CREATE TABLE IF NOT EXISTS format (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    value_enum_matrix INTEGER NOT NULL
    );
    CREATE UNIQUE INDEX name_format ON format(name);

    CREATE TABLE IF NOT EXISTS format_intermediary (
    fk_forms INTEGER REFERENCES forms(id) NOT NULL,
    fk_field INTEGER REFERENCES fields(id) NOT NULL,
    fk_format INTEGER REFERENCES format(id) NOT NULL
    );
    CREATE INDEX fk_forms_int_for ON format_intermediary(fk_forms);
    CREATE INDEX fk_field_int_for ON format_intermediary(fk_field);
    CREATE INDEX fk_fomrmat_int_for ON format_intermediary(fk_format);

    CREATE TABLE IF NOT EXISTS options (
    fk_forms INTEGER REFERENCES forms(id) NOT NULL,
    fk_fields INTEGER REFERENCES fields(id) NOT NULL,
    name TEXT NOT NULL,
    value TEXT NOT NULL
    );

    CREATE TABLE compatibility_matrix (
    fila INTEGER NOT NULL,
    columna INTEGER NOT NULL,
    fk_field_table_name TEXT REFERENCES field_table_name(field) NOT NULL,
    limitation_or_format INTEGER NOT NULL
    );
    -- Crear un Ã­ndice compuesto para las columnas fila y columna
    CREATE INDEX idx_fila_columna ON compatibility_matrix (fila, columna);
    CREATE INDEX idx_fk_field_table_name ON compatibility_matrix (fk_field_table_name);
    `
}
